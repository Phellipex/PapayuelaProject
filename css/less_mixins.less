/*

Remarks: 
~   is a escape character in Less
~'' is an escaped empty string

*/

.text-format(@alignment: ~''; @color: ~''; @size: ~''; @weight: ~'') {

    & when not (@alignment = ~''){
        text-align: @alignment;
    }

    & when not (@color = ~'') {
        color: @color;
    }

    & when not (@size = ~'') {
        font-size: @size;
    }

    & when not (@weight = ~'') {
        font-weight: @weight;
    }
}

.element-margin(@top: ~''; @bottom: ~''; @left: ~''; @right: ~'') when (@top = @bottom) and (@top = @left) and (@top = @right) {
    margin: @top;
}

.element-margin(@top: ~''; @bottom: ~''; @left: ~''; @right: ~'') when (default()) {
    
    & when not (@top = ~'') {
        margin-top: @top;
    }
    
    & when not (@bottom = ~'') {
        margin-bottom: @bottom;
    }
    
    & when not (@left = ~'') {
        margin-left: @left;
    }
    
    & when not (@right = ~'') {
        margin-right: @right;
    }
}

.element-padding(@top: ~''; @bottom: ~''; @left: ~''; @right: ~'') when (@top = @bottom) and (@top = @left) and (@top = @right) {
padding: @top;
}

.element-padding(@top: ~''; @bottom: ~''; @left: ~''; @right: ~'') when (default()) {
    
    & when not (@top = ~''){
        padding-top: @top;
    }
    
    & when not (@bottom = ~'') {
        padding-bottom: @bottom;
    }
    
    & when not (@left = ~'') {
        padding-left: @left;
    }
    
    & when not (@right = ~'') {
        padding-right: @right;
    }
}

.element-shadow(@color) {
    box-shadow: 10px 10px 5px -4px @color;
}
